{"version":3,"sources":["serviceWorker.ts","header/Header.tsx","home/home.tsx","list/view/liQue.tsx","list/action.ts","create/actionTypes.ts","list/view/list.tsx","create/view/option.tsx","create/action.tsx","create/view/que.tsx","create/view/Calendar.js","create/view/create.tsx","fill/view/opt.tsx","fill/view/que.tsx","fill/action.ts","fill/actionType.ts","fill/view/fill.tsx","data/view/canvas.tsx","data/view/queItem.tsx","data/view/data.tsx","data/action.ts","data/actionTypes.ts","Questionnaire.tsx","store.ts","create/reducer.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Header","className","href","Home","LiQue","id","state","name","editQue","scanData","fillQue","data-id","type","value","onClick","newItem","Date","parse","List","props","this","data","map","item","key","onChange","selectInput","document","querySelectorAll","forEach","parentElement","getAttribute","removeItem","Number","Component","event","listTbody","getElementsByTagName","target","checked","connect","dispatch","hash","Option","removeOpt","updateOpt","content","placeholder","defaultValue","createItem","title","deadline","Que","index","index2","fn","question","updateQue","filterState","opt","parId","addOpt","upQue","upOpt","downQue","downOpt","copyQue","removeQue","cols","rows","filter","order","que","parIndex","parentId","Calendar","year","month","day","num","obj","selectedDay","init","calendar1","querySelector","calendarTable","style","display","input","set","listener","div","createElement","setAttribute","appendChild","table","selectYear","selectMonth","selectDay","bool","monthNum","i","option","innerHTML","onchange","curMonth","curDay","select","render","updateDate","curYear","curTime","classList","add","dayWeek","getDay","row","Math","ceil","tr","j","td","point","date","curDate","compareDate","backgroundColor","opacity","onmousedown","str","arr","split","oninput","node","onclick","isNaN","parseInt","selected","length","remove","getDate","splice","push","sortArray","console","log","sort","a","b","tar","newTar","newArr1","newArr2","tarNum","arrNum1","arrNum2","saveTitle","saveDeadline","win","filterQue","showCal","now","getFullYear","getMonth","update","nowQueId","addQue","queType","justOrder","saveQue","submitQue","clearQue","onFocus","Opt","changeOpt","word","count","findIndex","getData","bind","must","mustCheck","answer","saveOptData","saveWordData","number","ChangeOpt","updateWord","UpdateWord","Fill","optData","queData","arr1","arr2","getCompoData","getQueState","FillQue","AddCount","FillOpt","Canvas","x","y","x2","y2","beginPath","moveTo","lineTo","strokeStyle","stroke","Object","keys","fillText","submitCount","fillStyle","fillRect","canvas","getElementById","ctx","getContext","width","height","drawLine","drawMarker","drawRect","QueItem","selectOpt","Data","submit","selectQue","back","prototype","selectData","Questionnaire","path","component","exact","Create","localStorage","setItem","JSON","stringify","prop","reducers","combineReducers","action","obj2","find","initialState","getItem","createStore","ReactDOM","store","Store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eeef73f7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div className='header'>\r\n            <span>问卷</span>\r\n            <ul className=\"navigater\">\r\n                <li className=\"navi-home\"><a href=\"#/home\">首页</a></li>\r\n                <li className=\"navi-create\"><a href=\"#/create\">问卷新建</a></li>\r\n                <li className=\"navi-fill\"><a href=\"#/fill\">问卷填写</a></li>\r\n                <li className=\"navi-data\"><a href=\"#/data\">问卷数据</a></li>\r\n                <li className=\"navi-list\"><a href=\"#/list\">问卷列表</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"passage\">\r\n                <h1>Welcome to visit here!</h1>\r\n                <p>it is a questionnaire manager</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\ninterface iLiQue {\r\n    id: number;\r\n    state: string;\r\n    name: string;\r\n    [name: string]: any;\r\n}\r\n\r\nconst LiQue = ({ id, state, name, editQue, scanData, fillQue }: iLiQue) => {\r\n    return (\r\n        <tr data-id={id}>\r\n            <td><input type=\"checkbox\" /></td>\r\n            <td><span>{name}</span></td>\r\n            <td><span>{state}</span></td>\r\n            {state === 'ready' ? <td><input className=\"edit\" type=\"button\" value=\"编辑\" onClick={editQue} /><input type=\"button\" value=\"查看\" onClick={fillQue} /></td> :\r\n                <td><input className=\"edit\" type=\"button\" value=\"数据\" onClick={scanData} /><input type=\"button\" value=\"查看\" onClick={fillQue} /></td>}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default LiQue;","import * as actionTypes from './actionTypes';\r\nimport * as actionTypesInCreate from '../create/actionTypes';\r\n\r\nexport const editQue = (id: number) => ({\r\n    type: actionTypesInCreate.ChangeQue,\r\n    id: id\r\n});\r\nexport const scanData = (id: number) => ({\r\n    type: actionTypesInCreate.ChangeQue,\r\n    id: id\r\n});\r\nexport const fillQue = (id: number) => ({\r\n    type: actionTypesInCreate.ChangeQue,\r\n    id: id\r\n});\r\n\r\n\r\nexport const newItem = () => ({\r\n    type: actionTypesInCreate.ChangeQue,\r\n    id: Date.parse(`${new Date()}`)\r\n});\r\nexport const removeItem = (id: number) => ({\r\n    type: actionTypesInCreate.RemoveItem,\r\n    id: id\r\n});\r\n","const AddQue = 'Que/Add';\r\nconst RemoveQue = 'Que/Remove';\r\nconst UpQue = 'Que/Up';\r\nconst DownQue = 'Que/Down';\r\nconst CopyQue = 'Que/Copy';\r\nconst SaveQue = 'Que/Save';\r\nconst SubmitQue = 'Que/Submit';\r\nconst DoneQue = 'Que/Done';\r\nconst ChangeQue = 'Que/Change';\r\nconst UpdateQue = 'Que/Update';\r\nconst UpdateWord = 'Que/UpdateWord';\r\n\r\n\r\nconst AddOpt = 'Opt/Add';\r\nconst UpOpt = 'Opt/Up';\r\nconst DownOpt = 'Opt/Down';\r\nconst RemoveOpt = 'Opt/Remove';\r\nconst UpdateOpt = 'Opt/Update';\r\nconst SubmitOpt = 'Opt/Submit';\r\n\r\nexport const FillQue='Que/Fill';\r\nexport const FillOpt='Opt/Fill';\r\n\r\nexport const NewItem = 'Item/New';\r\nconst RemoveItem = 'Item/Remove';\r\n//const ScanItem = 'Item/Scan';\r\n//const FillItem = 'Item/Fill';\r\n\r\nexport const AddCount='DataCount/Add';\r\nexport const JustQueOrder='Que/JustOrder';\r\n\r\nexport {\r\n    UpdateWord, SubmitOpt, RemoveItem, UpdateQue\r\n    , UpdateOpt, ChangeQue, AddQue, RemoveQue\r\n    , UpQue, DownQue, CopyQue, AddOpt, UpOpt\r\n    , DownOpt, RemoveOpt, SaveQue, SubmitQue, DoneQue\r\n};","import React, { Component, ChangeEvent } from 'react';\r\nimport LiQue from './liQue';\r\nimport './list.css';\r\nimport { connect } from 'react-redux';\r\nimport { editQue, scanData, fillQue, newItem, removeItem } from '../action';\r\nimport { dataState, state, data1 } from '../../interface';\r\nimport { Dispatch } from 'redux';\r\n\r\ninterface iList {\r\n    data: dataState\r\n    [name: string]: any\r\n}\r\n\r\nclass List extends Component<iList> {\r\n    constructor(props: iList) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"list\">\r\n                <section>\r\n                    <h1>问卷列表</h1>\r\n                    <table className=\"queList\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>选中</td>\r\n                                <td>问卷名称</td>\r\n                                <td>问卷状态</td>\r\n                                <td>功能区域</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.data.map((item: data1) => (\r\n                                <LiQue\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    state={item.state as string}\r\n                                    name={item.name as string}\r\n                                    editQue={() => this.props.editQue(item.id)}\r\n                                    scanData={() => this.props.scanData(item.id)}\r\n                                    fillQue={() => this.props.fillQue(item.id)}\r\n                                />\r\n                            ))}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td><input className='selectAll' type=\"checkbox\" onChange={selectInput} />全选</td>\r\n                                <td></td>\r\n                                <td><input type=\"button\" className=\"deleteQue\" value=\"删除问卷\" onClick={() => {\r\n                                    let arr = document.querySelectorAll('tbody input:checked');\r\n                                    arr.forEach((item: Element) => {\r\n                                        let id = item.parentElement!.parentElement!.getAttribute('data-id');\r\n                                        this.props.removeItem(Number(id));\r\n                                    })\r\n                                }} /></td>\r\n                                <td><input type=\"button\" className=\"createQue\" value=\"新建问卷\" onClick={this.props.newItem} /></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst selectInput: (event: ChangeEvent) => void = (event) => {\r\n    let listTbody = document.getElementsByTagName('tbody')[0];\r\n    if ((event.target as HTMLInputElement).checked) {\r\n        (listTbody.querySelectorAll('input[type=checkbox]') as NodeListOf<HTMLInputElement>).forEach((item) => { item.checked = true });\r\n    } else {\r\n        (listTbody.querySelectorAll('input[type=checkbox]') as NodeListOf<HTMLInputElement>).forEach((item) => { item.checked = false });\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: state) => {\r\n    return {\r\n        data: state.data as dataState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        editQue: (id: number) => {\r\n            dispatch(editQue(id));\r\n            window.location.hash = '/create';\r\n        },\r\n        scanData: (id: number) => {\r\n            dispatch(scanData(id));\r\n            window.location.hash = '/data';\r\n        },\r\n        fillQue: (id: number) => {\r\n            dispatch(fillQue(id));\r\n            window.location.hash = '/fill';\r\n        },\r\n        newItem: () => {\r\n            dispatch(newItem());\r\n            window.location.hash = '/create';\r\n        },\r\n        removeItem: (id: number) => {\r\n            dispatch(removeItem(id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List)","import React, { JSXElementConstructor } from 'react';\r\nimport * as actionTypes from '../actionTypes';\r\nimport { updateOpt } from '../action';\r\n\r\ninterface OptProps {\r\n    removeOpt: any;\r\n    type: string;\r\n    [name: string]: any;\r\n}\r\nconst Option: React.FC<OptProps> = ({ removeOpt, type, updateOpt,content }) => {\r\n    switch (type) {\r\n        case 'single':\r\n            return (\r\n                <div>\r\n                    <input type=\"radio\" /><input type=\"text\" placeholder=\"选项内容\" defaultValue={content} onChange={updateOpt} />\r\n                    <input type=\"button\" value=\"X\" onClick={removeOpt} />\r\n                </div>\r\n            )\r\n        case 'multi':\r\n            return (\r\n                <div>\r\n                    <input type=\"checkbox\" /><input type=\"text\" placeholder=\"选项内容\" defaultValue={content} onChange={updateOpt} />\r\n                    <input type=\"button\" value=\"X\" onClick={removeOpt} />\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div></div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Option;","import * as actionTypes from './actionTypes';\r\n\r\nexport const addQue = (type: String, parentId: Number) => ({\r\n    type: actionTypes.AddQue,\r\n    queType: type,\r\n    parentId: parentId\r\n});\r\nexport const removeQue = (index: Number, parentId: Number) => ({\r\n    type: actionTypes.RemoveQue,\r\n    index: index,\r\n    parentId: parentId\r\n});\r\nexport const upQue = (index: Number, parentId: Number) => ({\r\n    type: actionTypes.UpQue,\r\n    index: index,\r\n    parentId: parentId\r\n});\r\nexport const downQue = (index: Number, parentId: Number) => ({\r\n    type: actionTypes.DownQue,\r\n    index: index,\r\n    parentId: parentId\r\n});\r\nexport const copyQue = (index: Number, parentId: Number) => ({\r\n    type: actionTypes.CopyQue,\r\n    index: index,\r\n    parentId: parentId\r\n});\r\n\r\n\r\nexport const addOpt = (parIndex: Number, parentId: Number) => ({\r\n    type: actionTypes.AddOpt,\r\n    parIndex: parIndex,\r\n    parentId: parentId\r\n});\r\nexport const upOpt = (parIndex: Number, parentId: Number) => ({\r\n    type: actionTypes.UpOpt,\r\n    parIndex: parIndex,\r\n    parentId: parentId\r\n});\r\nexport const downOpt = (parIndex: Number, parentId: Number) => ({\r\n    type: actionTypes.DownOpt,\r\n    parIndex: parIndex,\r\n    parentId: parentId\r\n});\r\nexport const removeOpt = (parIndex: Number, parentId: Number, index: Number) => ({\r\n    type: actionTypes.RemoveOpt,\r\n    parIndex: parIndex,\r\n    parentId: parentId,\r\n    index: index\r\n});\r\nexport const updateOpt = (parIndex: Number, parentId: Number, index: Number, content: string) => ({\r\n    type: actionTypes.UpdateOpt,\r\n    parIndex: parIndex,\r\n    parentId: parentId,\r\n    index: index,\r\n    content: content\r\n})\r\n\r\n\r\nexport const saveQue = (id: number) => ({\r\n    type: actionTypes.SaveQue,\r\n    id: id\r\n});\r\nexport const submitQue = (id: number) => ({\r\n    type: actionTypes.SubmitQue,\r\n    id: id\r\n});\r\nexport const doneQue = (id: number) => ({\r\n    type: actionTypes.DoneQue,\r\n    id: id\r\n});\r\nexport const clearQue = () => ({\r\n    type: actionTypes.ChangeQue,\r\n    id: null\r\n});\r\nexport const updateQue = (id: number, index: number, content: string) => ({\r\n    type: actionTypes.UpdateQue,\r\n    id: id,\r\n    index: index,\r\n    content: content\r\n});\r\n\r\nexport const createItem = (id: number, title: string, deadline: string) => ({\r\n    type: actionTypes.NewItem,\r\n    id: id,\r\n    title: title,\r\n    deadline: deadline\r\n});\r\n\r\nexport const justOrder = (index: Number, parentId: Number) => ({\r\n    type: actionTypes.JustQueOrder,\r\n    index: index,\r\n    id: parentId\r\n});","import React, { Component, ChangeEvent } from 'react';\r\nimport Option from './option';\r\nimport { connect } from 'react-redux';\r\nimport { removeOpt, addOpt, upOpt, downOpt, updateOpt } from '../action';\r\nimport { opt1, dataState, state } from '../../interface';\r\nimport { Dispatch } from 'redux';\r\n\r\ninterface QueProps {\r\n    type: string;\r\n    index: number;\r\n    parId: number;\r\n    opt: any;\r\n    [name: string]: any;\r\n}\r\n\r\ninterface QueState {\r\n    state: []\r\n}\r\nclass Que extends Component<QueProps> {\r\n    constructor(props: QueProps) {\r\n        super(props);\r\n    }\r\n    updateOpt(index: number, id: number, index2: number, fn: Function) {\r\n        //函数柯里化 先在外部存入id等 内部无状态组件传入event\r\n        return function (event?: Event) {\r\n            fn(index, id, index2, (event?.target as HTMLInputElement).value);\r\n        }\r\n    }\r\n    render() {\r\n        switch (this.props.type) {\r\n            case 'single':\r\n                return (\r\n                    <li data-id='single'>\r\n                        <p>Q{this.props.index + 1}单选题</p>\r\n                        <input type=\"text\" placeholder=\"题目内容\" defaultValue={this.props.item.question} onChange={this.props.updateQue} />\r\n                        {filterState(this.props.opt, this.props.parId, this.props.index).map((item: opt1, index: number) => {\r\n                            return (\r\n                                <Option\r\n                                    key={this.props.parId + '-' + this.props.index + '-' + index}\r\n                                    type={this.props.type}\r\n                                    content={item.content}\r\n                                    removeOpt={() => this.props.removeOpt(this.props.index, this.props.parId, index)}\r\n                                    updateOpt={this.updateOpt(this.props.index, this.props.parId, index, this.props.updateOpt)}\r\n                                />\r\n                            )\r\n                        })}\r\n                        <div data-id=\"addOpt\" className='addOpt' onClick={() => this.props.addOpt(this.props.index, this.props.parId)}>Add Option</div>\r\n                        <div className=\"create-controller\">\r\n                            <span className=\"controller-up\" onClick={() => {\r\n                                this.props.upQue(this.props.index, this.props.parId)\r\n                                this.props.upOpt(this.props.index, this.props.parId)\r\n                            }}>上移</span>\r\n                            <span className=\"controller-down\" onClick={() => {\r\n                                this.props.downQue(this.props.index, this.props.parId)\r\n                                this.props.downOpt(this.props.index, this.props.parId)\r\n                            }}>下移</span>\r\n                            <span className=\"controller-copy\" onClick={() => this.props.copyQue(this.props.index, this.props.parId)}>复用</span>\r\n                            <span className=\"controller-delete\" onClick={() => this.props.removeQue(this.props.index, this.props.parId)}>删除</span>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            case 'multi':\r\n                return (\r\n                    <li data-id='multi'>\r\n                        <p>Q{this.props.index + 1}多选题</p>\r\n                        <input type=\"text\" placeholder=\"题目内容\" defaultValue={this.props.item.question} onChange={this.props.updateQue} />\r\n                        {filterState(this.props.opt, this.props.parId, this.props.index).map((item: opt1, index: number) => {\r\n                            return (\r\n                                <Option\r\n                                    key={this.props.parId + '-' + this.props.index + '-' + index}\r\n                                    type={this.props.type}\r\n                                    content={item.content}\r\n                                    removeOpt={() => this.props.removeOpt(this.props.index, this.props.parId, index)}\r\n                                    updateOpt={this.updateOpt(this.props.index, this.props.parId, index, this.props.updateOpt)}\r\n                                />\r\n                            )\r\n                        })}\r\n                        <div data-id=\"addOpt\" className='addOpt' onClick={() => this.props.addOpt(this.props.index, this.props.parId)}>Add Option</div>\r\n                        <div className=\"create-controller\">\r\n                            <span className=\"controller-up\" onClick={() => {\r\n                                this.props.upQue(this.props.index, this.props.parId)\r\n                                this.props.upOpt(this.props.index, this.props.parId)\r\n                            }}>上移</span>\r\n                            <span className=\"controller-down\" onClick={() => {\r\n                                this.props.downQue(this.props.index, this.props.parId)\r\n                                this.props.downOpt(this.props.index, this.props.parId)\r\n                            }}>下移</span>\r\n                            <span className=\"controller-copy\" onClick={() => this.props.copyQue(this.props.index, this.props.parId)}>复用</span>\r\n                            <span className=\"controller-delete\" onClick={() => this.props.removeQue(this.props.index, this.props.parId)}>删除</span>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            case 'word':\r\n                return (\r\n                    <li data-id='word'>\r\n                        <p>Q{this.props.index + 1}文字题</p>\r\n                        <input type=\"text\" placeholder=\"题目内容\" defaultValue={this.props.item.question} onChange={this.props.updateQue} />\r\n                        <textarea name=\"\" id=\"\" cols={30} rows={10} placeholder=\"回答内容\"></textarea>\r\n                        <span>\r\n                            <p><input type=\"checkbox\" />此项必填</p>\r\n                        </span>\r\n                        <div className=\"create-controller\">\r\n                            <span className=\"controller-up\" onClick={() => {\r\n                                this.props.upQue(this.props.index, this.props.parId)\r\n                                this.props.upOpt(this.props.index, this.props.parId)\r\n                            }}>上移</span>\r\n                            <span className=\"controller-down\" onClick={() => {\r\n                                this.props.downQue(this.props.index, this.props.parId)\r\n                                this.props.downOpt(this.props.index, this.props.parId)\r\n                            }}>下移</span>\r\n                            <span className=\"controller-copy\" onClick={() => this.props.copyQue(this.props.index, this.props.parId)}>复用</span>\r\n                            <span className=\"controller-delete\" onClick={() => this.props.removeQue(this.props.index, this.props.parId)}>删除</span>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nconst filterState = (data: dataState, id: number, index: number) => {\r\n    var arr = data.filter((item: any) => {\r\n        if (item.parId === id && item.order === index) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n    return arr;\r\n}\r\n\r\nconst mapStateToProps = (state:state) => {\r\n    return {\r\n        opt: state.opt,\r\n        que: state.que\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        removeOpt: (parIndex: number, parentId: number, index: number) => {\r\n            dispatch(removeOpt(parIndex, parentId, index));\r\n        },\r\n        addOpt: (parIndex: number, parentId: number) => {\r\n            dispatch(addOpt(parIndex, parentId))\r\n        },\r\n        upOpt: (parIndex: number, parentId: number) => {\r\n            dispatch(upOpt(parIndex, parentId))\r\n        },\r\n        downOpt: (parIndex: number, parentId: number) => {\r\n            dispatch(downOpt(parIndex, parentId))\r\n        },\r\n        updateOpt: (parIndex: number, parentId: number, index: number, content: string) => {\r\n            dispatch(updateOpt(parIndex, parentId, index, content))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Que);","class Calendar {\r\n    constructor(year, month, day, num = 10, obj) {\r\n        this.year = year;\r\n        this.month = month + 1;\r\n        this.day = day;\r\n        this.num = num;\r\n        this.obj = obj;\r\n        this.selectedDay = [];\r\n        this.init();\r\n    }\r\n    //总调用函数\r\n    init() {\r\n        var calendar1 = document.querySelector('.calendar');\r\n        var calendarTable = document.querySelector('.calendarTable');\r\n        calendarTable.style.display = 'none';\r\n        var input = document.querySelector('.date');\r\n        input.value = `${this.year}-${this.month}-${this.day}`;\r\n        this.set(calendarTable);\r\n        this.listener(calendar1, calendarTable, input);\r\n    }\r\n    set(obj) {\r\n        var div = document.createElement('div');\r\n        div.setAttribute('id', 'select');\r\n        obj.appendChild(div);\r\n        var table = document.createElement('table');\r\n        table.setAttribute('id', 'table');\r\n        obj.appendChild(table);\r\n    }\r\n    select(year, month, day, num = 10) {\r\n        var div = document.querySelector('#select');\r\n        var selectYear = document.createElement('select');\r\n        selectYear.setAttribute('id', 'selectYear');\r\n        var selectMonth = document.createElement('select');\r\n        selectMonth.setAttribute('id', 'selectMonth');\r\n        var selectDay = document.createElement('select');\r\n        selectDay.setAttribute('id', 'selectDay');\r\n        var input = document.querySelector('.date');\r\n        var calendarTable = document.querySelector('.calendarTable');\r\n        //每月天数\r\n        var bool = year % 4 === 0;\r\n        var monthNum = [31, bool ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        //年份选择框遍历 区间为当前年份加减num\r\n        for (let i = -num; i < num; i++) {\r\n            var option = document.createElement('option');\r\n            if (i + 2019 === year * 1) {\r\n                option.setAttribute('selected', 'selected');\r\n            }\r\n            option.setAttribute('value', `${2019 + i}`);\r\n            option.innerHTML = 2019 + i;\r\n            selectYear.appendChild(option);\r\n        }\r\n        //月份固定12\r\n        for (let i = 1; i <= 12; i++) {\r\n            var option = document.createElement('option');\r\n            if (i === month * 1) {\r\n                option.setAttribute('selected', 'selected');\r\n            }\r\n            option.setAttribute('value', `${i}`);\r\n            option.innerHTML = i;\r\n            selectMonth.appendChild(option);\r\n        }\r\n        //天数根据月份来确定\r\n        for (let i = 1; i <= monthNum[month - 1]; i++) {\r\n            var option = document.createElement('option');\r\n            if (i === day * 1) {\r\n                option.setAttribute('selected', 'selected');\r\n            }\r\n            option.setAttribute('value', `${i}`);\r\n            option.innerHTML = i;\r\n            selectDay.appendChild(option);\r\n        }\r\n        selectYear.onchange = () => {\r\n            var curMonth = document.querySelector('#selectMonth');\r\n            var curDay = document.querySelector('#selectDay');\r\n            this.select(selectYear.value, curMonth.value, curDay.value);\r\n            input.value = `${selectYear.value}-${curMonth.value}-${curDay.value}`;\r\n            this.render(selectYear.value, curMonth.value, curDay.value);\r\n            this.updateDate(selectYear.value, curMonth.value, curDay.value);\r\n        }\r\n        selectMonth.onchange = () => {\r\n            var curYear = document.querySelector('#selectYear');\r\n            var curDay = document.querySelector('#selectDay');\r\n            this.select(curYear.value, selectMonth.value, curDay.value);\r\n            input.value = `${curYear.value}-${selectMonth.value}-${curDay.value}`;\r\n            this.render(curYear.value, selectMonth.value, curDay.value);\r\n            this.updateDate(curYear.value, selectMonth.value, curDay.value);\r\n        }\r\n        selectDay.onchange = () => {\r\n            var curYear = document.querySelector('#selectYear');\r\n            var curMonth = document.querySelector('#selectMonth');\r\n            //input栏当点击日期完成时填入当前数据\r\n            input.value = `${curYear.value}-${curMonth.value}-${selectDay.value}`;\r\n            this.render(curYear.value, curMonth.value, selectDay.value);\r\n            calendarTable.style.display = 'none';\r\n            this.updateDate(curYear.value, curMonth.value, selectDay.value);\r\n        }\r\n        div.innerHTML = '';\r\n        div.appendChild(selectYear);\r\n        div.appendChild(selectMonth);\r\n        div.appendChild(selectDay);\r\n    }\r\n    render(year, month, day) {\r\n        var year = Number(year), month = Number(month), day = Number(day);\r\n        var curTime = new Date(year, month - 1, 1);\r\n        var table = document.querySelector('#table');\r\n        table.classList.add('calendar');\r\n        table.innerHTML = `\r\n            <thead>\r\n                <td>日</td>\r\n                <td>一</td>\r\n                <td>二</td>\r\n                <td>三</td>\r\n                <td>四</td>\r\n                <td>五</td>\r\n                <td>六</td>\r\n            </thead>\r\n        `;\r\n        //月份需要减1才能对应上日期\r\n        month--;\r\n        //确定是否闰年\r\n        var bool = year % 4 === 0;\r\n        //确定月份天数\r\n        var monthNum = [31, bool ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        //确定当天周几\r\n        var dayWeek = curTime.getDay();\r\n        //确定日历行数\r\n        var row = Math.ceil((dayWeek + monthNum[month]) / 7);\r\n        for (var i = 0; i < row; i++) {\r\n            var tr = document.createElement('tr');\r\n            for (var j = 0; j < 7; j++) {\r\n                var td = document.createElement('td');\r\n                this.point(td);\r\n                //计算出每月第一天在日历上的位置\r\n                var date = i * 7 + j - dayWeek + 1;\r\n                if (date > 0 && date <= monthNum[month]) {\r\n                    //判断是否被选中区域\r\n                    //先计算出来变量准备和interval对比\r\n                    var curDate = [year, month + 1, date];\r\n                    if (this.compareDate(curDate, this.selectedDay)) {\r\n                        td.classList.add('selected');\r\n                    }\r\n                    td.innerHTML = date;\r\n                    if (date === day) {\r\n                        td.style.backgroundColor = 'red';\r\n                    }\r\n                } else if (date <= 0) {\r\n                    //判断上个月的天数计算前月日期\r\n                    //如果当前是一月则前月直接定位12月\r\n                    td.innerHTML = monthNum[month === 0 ? 11 : month - 1] + date;\r\n                    td.style.opacity = '0.3'\r\n                } else if (date > monthNum[month]) {\r\n                    //无需判断了 直接123456遍历下去即可\r\n                    td.innerHTML = date - monthNum[month];\r\n                    td.style.opacity = '0.3'\r\n                }\r\n                tr.appendChild(td);\r\n            }\r\n            table.appendChild(tr);\r\n        }\r\n    }\r\n    listener(calendar1, calendarTable, input) {\r\n        input.onmousedown = () => {\r\n            if (input.value !== '') {\r\n                var str = input.value.match(/\\d{4}-\\d{1,2}-\\d{1,2}/);\r\n                if (str) {\r\n                    var arr = str[0].split('-');\r\n                    this.select(arr[0], arr[1], arr[2]);\r\n                    this.render(arr[0], arr[1], arr[2]);\r\n                }\r\n            }\r\n            if (calendarTable.style.display === 'none') {\r\n                calendarTable.style.display = 'block';\r\n            } else {\r\n                calendarTable.style.display = 'none';\r\n            }\r\n        }\r\n        input.oninput = () => {\r\n            if (input.value !== '') {\r\n                var str = input.value.match(/\\d{4}-\\d{1,2}-\\d{1,2}/);\r\n                if (str) {\r\n                    var arr = str[0].split('-');\r\n                    this.select(arr[0], arr[1], arr[2]);\r\n                    this.render(arr[0], arr[1], arr[2]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //点击标记日期\r\n    point(node) {\r\n        node.onclick = (event) => {\r\n            if (event.target.style.opacity === '0.3' || isNaN(parseInt(event.target.innerHTML))) return false;\r\n            var selected = document.querySelectorAll('.selected');\r\n            if (this.selectedDay.length === 0 || this.selectedDay.length > 1) {\r\n                this.selectedDay = [];\r\n                selected.forEach(item => {\r\n                    item.classList.remove('selected');\r\n                })\r\n                node.classList.add('selected');\r\n                var date = this.getDate();\r\n                //日期是鼠标点选的 并非选下拉框选的 故替换最后一位为鼠标所选的日期\r\n                date.splice(2, 1, +node.innerHTML);\r\n                this.selectedDay.push(date);\r\n                //为了解决重复点一个点的问题进行数组去重\r\n            } else if (this.selectedDay.length === 1) {\r\n                node.classList.add('selected');\r\n                var date = this.getDate();\r\n                date.splice(2, 1, +node.innerHTML);\r\n                this.selectedDay.push(date);\r\n                this.selectedDay = this.sortArray(this.selectedDay);\r\n                this.render(this.year, this.month, this.day);\r\n                var input = document.querySelector('.date');\r\n                input.value = `${this.selectedDay[0][0]}-${this.selectedDay[0][1]}-${this.selectedDay[0][2]}至${this.selectedDay[1][0]}-${this.selectedDay[1][1]}-${this.selectedDay[1][2]}`;\r\n            }\r\n            console.log(this.selectedDay)\r\n        }\r\n    }\r\n    updateDate(year, month, day) {\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n    }\r\n    getDate() {\r\n        return [this.year, this.month, this.day];\r\n    }\r\n    //给添加的日期排序\r\n    sortArray(arr) {\r\n        var newArr = arr.sort((a, b) => {\r\n            if (a[0] !== b[0]) {\r\n                return a[0] - b[0];\r\n            } else {\r\n                if (a[1] !== b[1]) {\r\n                    return a[1] - b[1];\r\n                } else {\r\n                    return a[2] - b[2];\r\n                }\r\n            }\r\n        });\r\n        return newArr;\r\n    }\r\n    //对比日期大小 在区间内则返回true 反之为false\r\n    compareDate(tar, arr) {\r\n        if (arr.length <= 1) return false;\r\n        var newTar = tar.map(item => {\r\n            var str = `${item}`;\r\n            return str.length === 1 ? item = '0' + item : item;\r\n        });\r\n        var newArr1 = arr[0].map(item => {\r\n            var str = `${item}`;\r\n            return str.length === 1 ? item = '0' + item : item;\r\n        });\r\n        var newArr2 = arr[1].map(item => {\r\n            var str = `${item}`;\r\n            return str.length === 1 ? item = '0' + item : item;\r\n        });\r\n        var tarNum = `${newTar[0]}${newTar[1]}${newTar[2]}`,\r\n            arrNum1 = `${newArr1[0]}${newArr1[1]}${newArr1[2]}`,\r\n            arrNum2 = `${newArr2[0]}${newArr2[1]}${newArr2[2]}`;\r\n        if (+tarNum >= +arrNum1 && +tarNum <= +arrNum2) return true;\r\n        return false;\r\n    }\r\n}\r\nexport default Calendar;","import React, { ChangeEvent } from 'react';\r\nimport './create.css';\r\nimport Que from './que';\r\nimport { connect } from 'react-redux';\r\nimport { addQue, removeQue, upQue, downQue, copyQue, saveQue, submitQue, clearQue, updateQue, createItem, justOrder } from '../action';\r\nimport Calendar from './Calendar.js';\r\nimport { newItem } from '../../list/action';\r\nimport { dataState, que1, state } from '../../interface';\r\nimport { Dispatch } from 'redux';\r\n\r\n\r\ninterface icreate {\r\n    que: dataState\r\n    nowQueId: number\r\n    [name: string]: any\r\n}\r\n\r\nlet title = '';\r\nlet deadline = '';\r\n\r\nconst saveTitle = (event?: ChangeEvent) => {\r\n    title = (event?.target as HTMLInputElement).value;\r\n}\r\n\r\nconst saveDeadline = (event?: ChangeEvent) => {\r\n    deadline = (event?.target as HTMLInputElement).value;\r\n}\r\n\r\nconst win = window;\r\nconst Create = ({ que, nowQueId, addQue, removeQue, upQue, downQue, copyQue, saveQue, submitQue, clearQue, updateQue, newItem }: icreate) => {\r\n    if (nowQueId === 0) {\r\n        return (\r\n            <div className='create'>\r\n                <div className='create-2'>\r\n                    <p>点击按钮新建问卷</p>\r\n                    <input type=\"button\" value=\"新建问卷\" onClick={newItem} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"create\">\r\n            <div className=\"create-1\">\r\n                <div className=\"create-title\"><input type=\"text\" placeholder=\"问卷标题\" onChange={saveTitle} /></div>\r\n                <div className=\"queAll\">\r\n                    <ul data-id={nowQueId}>\r\n                        {\r\n                            filterQue(que, nowQueId).map((item: que1, index: number) => (\r\n                                <Que\r\n                                    key={item.parId + '-' + index}\r\n                                    index={index}\r\n                                    type={item.type}\r\n                                    parId={item.parId}\r\n                                    addQue={addQue}\r\n                                    removeQue={removeQue}\r\n                                    upQue={upQue}\r\n                                    downQue={downQue}\r\n                                    copyQue={copyQue}\r\n                                    item={item}\r\n                                    updateQue={update(item.parId as number, index, updateQue)}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"create-add\">\r\n                    <ul>\r\n                        <li onClick={() => addQue('single', nowQueId)}>单选题</li>\r\n                        <li onClick={() => addQue('multi', nowQueId)}>多选题</li>\r\n                        <li onClick={() => addQue('word', nowQueId)}>文字题</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"create-foot\">\r\n                    <div className=\"calendar\">问卷截止日期<input className=\"date\" type=\"text\" placeholder=\"点击出现日历\" onFocus={showCal} onChange={saveDeadline} />\r\n                        <div className=\"calendarTable\"></div>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"button\" value=\"保存问卷\" onClick={() => {\r\n                            saveQue(nowQueId, title, deadline);\r\n                            win.location.hash = '/list';\r\n                            clearQue();\r\n                        }} />\r\n                        <input type=\"button\" value=\"发布问卷\" onClick={() => {\r\n                            submitQue(nowQueId, title, deadline);\r\n                            win.location.hash = '/list';\r\n                            clearQue();\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst filterQue = (data: dataState, id: number) => {\r\n    let arr: any = [];\r\n    data.forEach((item: que1) => {\r\n        if (id !== null && item.parId === id) {\r\n            arr.push(item);\r\n        }\r\n    });\r\n    arr.sort((a: que1, b: que1) => {\r\n        return a.order! - b.order!;\r\n    })\r\n    return arr;\r\n}\r\n\r\nconst showCal = () => {\r\n    var now = new Date();\r\n    var calen = new Calendar(now.getFullYear(), now.getMonth(), now.getDate());\r\n}\r\n\r\nconst mapStateToProps = (state: state) => {\r\n    return {\r\n        que: state.que as [],\r\n        nowQueId: state.nowQueId as number\r\n    }\r\n}\r\n\r\nconst update = (id: number, index: number, fn: Function) => {\r\n    return function (event?: Event) {\r\n        fn(id, index, (event?.target as HTMLInputElement).value);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        addQue: (type: String, parentId: Number) => {\r\n            dispatch(addQue(type, parentId))\r\n        },\r\n        removeQue: (index: Number, parentId: Number) => {\r\n            dispatch(removeQue(index, parentId));\r\n            //移除index后还得把后面的index全部减一 防止混乱\r\n            dispatch(justOrder(index, parentId));\r\n        },\r\n        upQue: (index: Number, parentId: Number) => {\r\n            dispatch(upQue(index, parentId))\r\n        },\r\n        downQue: (index: Number, parentId: Number) => {\r\n            dispatch(downQue(index, parentId))\r\n        },\r\n        copyQue: (index: Number, parentId: Number) => {\r\n            dispatch(copyQue(index, parentId))\r\n        },\r\n        saveQue: (id: number, title: string, deadline: string) => {\r\n            dispatch(createItem(id, title, deadline))\r\n            dispatch(saveQue(id));\r\n        },\r\n        submitQue: (id: number, title: string, deadline: string) => {\r\n            dispatch(createItem(id, title, deadline))\r\n            dispatch(submitQue(id))\r\n        },\r\n        clearQue: () => {\r\n            dispatch(clearQue())\r\n        },\r\n        updateQue: (id: number, index: number, content: string) => {\r\n            dispatch(updateQue(id, index, content))\r\n        },\r\n        newItem: () => {\r\n            dispatch(newItem());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create)","import React, { ChangeEvent } from 'react';\r\nimport { opt1 } from '../../interface';\r\n\r\ninterface iOpt {\r\n    item: opt1;\r\n    changeOpt: (event?:ChangeEvent)=>undefined;\r\n    type: string\r\n}\r\n\r\nconst Opt = ({ item, changeOpt, type }: iOpt) => {\r\n    switch (type) {\r\n        case 'single':\r\n            return (\r\n                <div>\r\n                    <p><input type=\"radio\" value={item.index + 1} name={'0'} onChange={changeOpt} />{item.content || '未填写选项内容'}</p>\r\n                </div>\r\n            );\r\n        case 'multi':\r\n            return (\r\n                <div>\r\n                    <p><input type=\"checkbox\" value={item.index + 1} name={'0'} onChange={changeOpt} />{item.content || '未填写选项内容'}</p>\r\n                </div>\r\n            );\r\n        default:\r\n            return (<div></div>);\r\n    }\r\n}\r\n\r\nexport default Opt;","import React, { Component, ChangeEvent } from 'react';\r\nimport Opt from './opt';\r\nimport { connect } from 'react-redux';\r\nimport { ChangeOpt, UpdateWord } from '../action';\r\nimport { Dispatch } from 'redux';\r\nimport { que1, dataState, opt1, state } from '../../interface';\r\n\r\ninterface iQue {\r\n    item: que1;\r\n    opt: dataState;\r\n    index: number;\r\n    [name: string]: any;\r\n}\r\n\r\nclass Que extends Component<iQue> {\r\n    data: Array<any>;\r\n    word: Object;\r\n    count: Array<any>;\r\n    constructor(props: iQue) {\r\n        super(props);\r\n        this.data = [];\r\n        this.word = {};\r\n        this.count = [];\r\n    }\r\n    saveOptData(parIndex: Number, parentId: Number, index: Number, queType: string) {\r\n        if (queType === 'publish') {\r\n            return function (this: any, event?: ChangeEvent) {\r\n                let obj = {\r\n                    parId: parentId,\r\n                    order: parIndex,\r\n                    index: index,\r\n                    count: 0\r\n                }\r\n                if ((event?.target as HTMLInputElement).checked) {\r\n                    obj.count += 1;\r\n                } else {\r\n                    obj.count = (obj.count === 0 ? 0 : obj.count - 1);\r\n                }\r\n                let num = this.data.findIndex((item: opt1) => item.parId === parentId && item.order === parIndex && item.index === index);\r\n                if (num !== -1) {\r\n                    this.data[num] = obj;\r\n                } else {\r\n                    this.data.push(obj);\r\n                }\r\n                this.props.getData(...this.data);\r\n                let num2 = this.count.findIndex((item: que1) => item.parId === parentId && item.order === parIndex);\r\n                if (num2 === -1) {\r\n                    this.count.push({\r\n                        parId: parentId,\r\n                        order: parIndex\r\n                    });\r\n                }\r\n            }.bind(this);\r\n        }\r\n    }\r\n    saveWordData(id: number, index: number, queType: string, must: boolean): any {\r\n        if (queType === 'publish') {\r\n            return function (this: any, event?: ChangeEvent) {\r\n                if (must && !(event?.target as HTMLTextAreaElement).value) {\r\n                    console.log('此题必填');\r\n                    this.props.mustCheck(false);\r\n                } else {\r\n                    let obj = {\r\n                        parId: id,\r\n                        order: index,\r\n                        type: 'word',\r\n                        answer: (event?.target as HTMLTextAreaElement).value\r\n                    }\r\n                    this.word = obj;\r\n                    this.props.getData(this.word);\r\n                }\r\n            }.bind(this);\r\n        }\r\n    }\r\n    changeOption(parIndex: Number, parentId: Number, index: Number, fn: Function, queType: string) {\r\n        if (queType === 'publish') {\r\n            return function (event?: ChangeEvent) {\r\n                if ((event?.target as HTMLInputElement).checked) {\r\n                    fn(parIndex, parentId, index, 1);\r\n                } else {\r\n                    fn(parIndex, parentId, index, -1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateWordAnswer(id: number, index: number, fn: Function, queType: string): any {\r\n        if (queType === 'publish') {\r\n            return function (event?: ChangeEvent) {\r\n                fn(id, index, (event?.target as HTMLTextAreaElement).value);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        switch (this.props.item.type) {\r\n            case 'single':\r\n                return (\r\n                    <li data-id='single'>\r\n                        <p>Q{this.props.index + 1}单选题</p>\r\n                        <p>{this.props.item.question || '未填写问题'}</p>\r\n                        {filterState(this.props.opt, this.props.item.parId as number, this.props.index).map((item: opt1, index: number) => {\r\n                            return (\r\n                                <Opt\r\n                                    key={this.props.item.parId + '-' + this.props.item.order + '-' + index}\r\n                                    item={item}\r\n                                    type={this.props.item.type as string}\r\n                                    changeOpt={//this.changeOption(this.props.index, this.props.item.parId, index, this.props.changeOpt, this.props.queType)\r\n                                        this.saveOptData(this.props.index, this.props.item.parId as number, index, this.props.queType) as (event?: ChangeEvent) => undefined\r\n                                    }\r\n                                />\r\n                            )\r\n                        })}\r\n                    </li>\r\n                );\r\n            case 'multi':\r\n                return (\r\n                    <li data-id='multi'>\r\n                        <p>Q{this.props.index + 1}多选题</p>\r\n                        <p>{this.props.question}</p>\r\n                        {filterState(this.props.opt, this.props.item.parId as number, this.props.index).map((item: opt1, index: number) => {\r\n                            return (\r\n                                <Opt\r\n                                    item={item}\r\n                                    type={this.props.item.type as string}\r\n                                    changeOpt={//this.changeOption(this.props.index, this.props.item.parId, index, this.props.changeOpt, this.props.queType)\r\n                                        this.saveOptData(this.props.index, this.props.item.parId as number, index, this.props.queType) as (event?: ChangeEvent) => undefined\r\n                                    }\r\n                                />\r\n                            )\r\n                        })}\r\n                    </li>\r\n                );\r\n            case 'word':\r\n                return (\r\n                    <li data-id='word'>\r\n                        <p>Q{this.props.index + 1}文字题</p>\r\n                        <p>{this.props.item.question}</p>\r\n                        <span>{this.props.item.must ? '此项必填' : '此项选填'}</span>\r\n                        <textarea name=\"\" id=\"\" cols={30} rows={10} placeholder=\"回答内容\" onChange={//this.updateWordAnswer(this.props.item.parId, this.props.index, this.props.updateWord, this.props.queType)\r\n                            this.saveWordData(this.props.item.parId as number, this.props.index, this.props.queType, this.props.must)\r\n                        }></textarea>\r\n                    </li>\r\n                )\r\n            default:\r\n                return <div></div>;\r\n        }\r\n    }\r\n}\r\n\r\nconst filterState = (data: dataState, id: number, index: number) => {\r\n    var arr: Array<any> = data.filter((item: opt1) => {\r\n        if (item.parId === id && item.order === index) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n    return arr;\r\n}\r\n\r\nconst mapStateToProps = (state: state) => {\r\n    return {\r\n        opt: state.opt as dataState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        changeOpt: (parIndex: Number, parentId: Number, index: Number, number: number) => {\r\n            dispatch(ChangeOpt(parIndex, parentId, index, number))\r\n        },\r\n        updateWord: (id: number, index: number, answer: string) => {\r\n            dispatch(UpdateWord(id, index, answer))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Que)","import * as actionTypes from './actionType';\r\n\r\nexport const ChangeOpt = (parIndex: Number, parentId: Number, index: Number, number: number) => ({\r\n    type: actionTypes.SubmitOpt,\r\n    parIndex: parIndex,\r\n    parentId: parentId,\r\n    index: index,\r\n    number: number\r\n});\r\nexport const SubmitQue = () => ({\r\n    type: actionTypes.ChangeQue,\r\n    id: null\r\n});\r\nexport const UpdateWord = (id: number, index: number, answer: string) => ({\r\n    type: actionTypes.UpdateWord,\r\n    id: id,\r\n    index: index,\r\n    answer: answer\r\n});\r\nexport const FillQue = (id: number, index: number, answer: string) => ({\r\n    type: actionTypes.FillQue,\r\n    id: id,\r\n    index: index,\r\n    answer: answer\r\n});\r\nexport const FillOpt = (id: number, order: number, index: number, count: number) => ({\r\n    type: actionTypes.FillOpt,\r\n    id: id,\r\n    order: order,\r\n    index: index,\r\n    count: count\r\n});\r\nexport const AddCount = (id: number) => ({\r\n    type: actionTypes.AddCount,\r\n    id: id\r\n});","export const UpdateOpt = 'Opt/Update';\r\nexport const ChangeQue = 'Que/Change';\r\nexport const SubmitOpt = 'Opt/Submit';\r\nexport const UpdateWord = 'Que/UpdateWord';\r\n\r\nexport const FillQue='Que/Fill';\r\nexport const FillOpt='Opt/Fill';\r\n\r\nexport const AddCount='DataCount/Add';\r\n","import React, { Component } from 'react';\r\nimport Que from './que';\r\nimport './fill.css';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { SubmitQue, FillQue, FillOpt, AddCount } from '../action';\r\n\r\ninterface icreate {\r\n    que: any;\r\n    [name: string]: any;\r\n}\r\n\r\nclass Fill extends Component<icreate> {\r\n    optData: [any?];\r\n    queData: [any?];\r\n    bool: boolean;\r\n    constructor(props: icreate) {\r\n        super(props);\r\n        this.optData = [];\r\n        this.queData = [];\r\n        this.bool = true;\r\n    }\r\n    mustCheck(bool: boolean) {\r\n        this.bool = bool;\r\n    }\r\n    getCompoData() {\r\n        return function (this: any, ...arr: [any?]) {\r\n            //必须在函数内新建并引用this的两个数组 否则for循环内无法读取\r\n            let arr1 = this.optData, arr2 = this.queData;\r\n            for (let i of arr) {\r\n                if (i.type) {\r\n                    let num = arr2.findIndex((item: any) => item.parId === i.parId && item.order === i.order);\r\n                    num !== -1 ? arr2[num] = i : arr2.push(i);\r\n                } else {\r\n                    let num = arr1.findIndex((item: any) => item.parId === i.parId && item.order === i.order && item.index === i.index);\r\n                    num !== -1 ? arr1[num] = i : arr1.push(i);\r\n                }\r\n            }\r\n            this.optData = arr1;\r\n            this.queData = arr2;\r\n        }.bind(this)\r\n    }\r\n    filterQue(data: any, id: number) {\r\n        let arr: any = [];\r\n        data.forEach((item: any) => {\r\n            if (id !== null && item.parId === id) {\r\n                arr.push(item);\r\n            }\r\n        });\r\n        arr.sort((a: any, b: any) => {\r\n            return a.order - b.order;\r\n        });\r\n        return arr;\r\n    }\r\n    getQueState(data: any, id: number) {\r\n        let str = '';\r\n        data.forEach((item: any) => {\r\n            if (item.id === id) {\r\n                str = item.state;\r\n            }\r\n        });\r\n        return str;\r\n    }\r\n    render() {\r\n        if (this.props.nowQueId === 0) {\r\n            return (\r\n                <div className='fill'>\r\n                    <div className='fill-1'>请选择要填写的问卷</div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"fill\">\r\n                <div className=\"fill-1\">\r\n                    <div className=\"fill-title\">\r\n                        <p>问卷标题</p>\r\n                    </div>\r\n                    <div className='queFill'>\r\n                        <ul>\r\n                            {this.filterQue(this.props.que, this.props.nowQueId).map((item: any, index: number) => (\r\n                                <Que\r\n                                    getData={this.getCompoData()}\r\n                                    queType={this.getQueState(this.props.data, this.props.nowQueId)}\r\n                                    key={this.props.nowQueId + '-' + index}\r\n                                    item={item}\r\n                                    index={index}\r\n                                    mustCheck={this.mustCheck}\r\n                                />\r\n                            )\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"fill-foot\">\r\n                        <input type=\"button\" value=\"提交问卷\" onClick={() => { \r\n                            this.props.submitQue(this.props.data, this.props.nowQueId, this.queData, this.optData,this.bool) }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        data: state.data,\r\n        que: state.que,\r\n        nowQueId: state.nowQueId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        submitQue: (data: any, id: number, queData: [any?], optData: [any?], bool: boolean) => {\r\n            data.forEach((item: any) => {\r\n                if (item.id === id) {\r\n                    if (item.state === 'publish') {\r\n                        if (bool) {\r\n                            dispatch(SubmitQue());\r\n                            queData.forEach((item: any) => {\r\n                                dispatch(FillQue(item.parId, item.order, item.answer));\r\n                            });\r\n                            dispatch(AddCount(id));\r\n                            optData.forEach((item: any) => {\r\n                                dispatch(FillOpt(item.parId, item.order, item.index, item.count))\r\n                            });\r\n                        } else {\r\n                            console.log('问卷必填内容空缺，提交无效');\r\n                        }\r\n                    } else {\r\n                        console.log('问卷不为发布状态，提交无效');\r\n                    }\r\n                } else {\r\n                }\r\n            });\r\n            window.location.hash = '/list';\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fill)","import React, { Component } from 'react';\r\n\r\ninterface iCanvas {\r\n    [name: string]: any\r\n}\r\n\r\nclass Canvas extends Component<iCanvas> {\r\n    constructor(props: iCanvas) {\r\n        super(props);\r\n    }\r\n    drawLine(obj: CanvasRenderingContext2D, x: number, y: number, x2: number, y2: number) {\r\n        obj.beginPath();\r\n        obj.moveTo(x, y);\r\n        obj.lineTo(x2, y2);\r\n        obj.strokeStyle = 'black';\r\n        obj.stroke();\r\n    }\r\n    drawMarker(obj: CanvasRenderingContext2D, data: object|null) {\r\n        if (!data) {\r\n            obj.fillText('100%', 10, 50, 40);\r\n            obj.fillText('75%', 10, 105, 40);\r\n            obj.fillText('50%', 10, 160, 40);\r\n            obj.fillText('25%', 10, 215, 40);\r\n            obj.fillText('0', 20, 270, 40);\r\n        } else {\r\n            var len = Object.keys(data).length;\r\n            var num = 500 / (+len + 1);\r\n            var count = 1;\r\n            for (let i in data) {\r\n                obj.fillText(i, num * count + 50, 290, 50);\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n    drawRect(obj: CanvasRenderingContext2D, data: object|any, submitCount: number) {\r\n        var len = Object.keys(data).length;\r\n        var num = 500 / (+len + 1);\r\n        var count = 1;\r\n        for (let i in data) {\r\n            obj.fillStyle = 'red';\r\n            obj.fillRect(num * count + 25, 50 + 220 * (1 - data[i] / submitCount), 50, 220 * data[i] / submitCount);\r\n            count++;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <canvas id={this.props.que.parId+'-'+this.props.que.order}></canvas>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        let canvas= document.getElementById(this.props.que.parId+'-'+this.props.que.order) as HTMLCanvasElement;\r\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = 600;\r\n        canvas.height = 300;\r\n        this.drawLine(ctx, 50, 50, 50, 270);\r\n        this.drawLine(ctx, 50, 270, 550, 270);\r\n        this.drawMarker(ctx, null);\r\n        if (this.props.type === 'word') {\r\n            let obj = {\r\n                'answer': this.props.que.answer.length\r\n            };\r\n            this.drawMarker(ctx, obj);\r\n            this.drawRect(ctx, obj, this.props.count);\r\n        } else {\r\n            let obj: { [name: number]: number } = {};\r\n            this.props.opt.forEach((item: { index: number, [name: string]: any }) => {\r\n                obj[item.index + 1] = item.count;\r\n            });\r\n            this.drawMarker(ctx, obj);\r\n            this.drawRect(ctx, obj, this.props.count);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Canvas;","import React, { Component } from 'react';\r\nimport Canvas from './canvas';\r\nimport { connect } from 'react-redux';\r\nimport { dataState, emptyArr, opt1, state } from '../../interface';\r\n\r\ninterface QueItem {\r\n    [name: string]: any;\r\n}\r\nclass QueItem extends Component<QueItem>{\r\n    constructor(props: QueItem) {\r\n        super(props);\r\n    }\r\n    selectOpt(data: dataState, id: number, index: number) {\r\n        let arr: emptyArr = [];\r\n        data.forEach((item: opt1) => {\r\n            if (item.parId === id && item.order === index) {\r\n                arr.push(item);\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Q{this.props.index + 1}{this.props.item.type == 'single' ? '单选题' : this.props.item.type == 'multi' ? '多选题' : '文字题'}</p>\r\n                <p>该问题总提交次数为{this.props.count}次</p>\r\n                <Canvas\r\n                    type={this.props.item.type}\r\n                    opt={this.selectOpt(this.props.opt, this.props.item.parId, this.props.item.order)}\r\n                    que={this.props.item}\r\n                    count={this.props.count}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: state) => {\r\n    return {\r\n        opt: state.opt\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QueItem)","import React, { Component, Props } from 'react';\r\nimport QueItem from './queItem';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { clearQue } from '../action';\r\nimport './data.css';\r\nimport { dataState, data1, emptyArr, que1, state } from '../../interface';\r\n\r\ninterface iData {\r\n    data: data1\r\n    que: dataState\r\n    nowQueId: number\r\n    back: Function\r\n}\r\ninterface iData2 extends Array<any> {\r\n    [index: number]: {\r\n        id: number\r\n        name: string\r\n        submit: number\r\n        deadline: string\r\n    }\r\n}\r\ninterface Que extends Array<any> {\r\n    [index: number]: {\r\n        parId: number\r\n        order: number\r\n    }\r\n}\r\n\r\nclass Data extends Component<iData> {\r\n    constructor(props: iData) {\r\n        super(props);\r\n    }\r\n    selectData(data: dataState, id: number) {\r\n        let obj = {};\r\n        data.forEach((item: data1) => {\r\n            if (item.id === id) obj = item;\r\n        });\r\n        return obj;\r\n    }\r\n    selectQue(id: number, que: dataState) {\r\n        let arr: emptyArr= [];\r\n        que.forEach((item: que1) => {\r\n            if (item.parId === id) {\r\n                arr.push(item);\r\n            }\r\n        });\r\n        arr.sort((a: que1, b: que1) => {\r\n            return a.order! - b.order!;\r\n        });\r\n        return arr;\r\n    }\r\n    render() {\r\n        if (this.props.nowQueId === 0) {\r\n            return (\r\n                <div className='data'>\r\n                    <div className=\"data-1\">\r\n                        请选择要查看数据的页面\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"data\">\r\n                    <div className=\"data-1\">\r\n                        <div className=\"data-title\">\r\n                            <p>{this.props.data.name}</p>\r\n                            <span>问卷总提交次数：{this.props.data.submit} 截止日期：{this.props.data.deadline}</span>\r\n                        </div>\r\n                        <div className=\"queData\">\r\n                            {this.selectQue(this.props.nowQueId, this.props.que).map((item: Array<any>, index: number) => (\r\n                                <QueItem\r\n                                    key={this.props.nowQueId + 'data' + index}\r\n                                    item={item}\r\n                                    index={index}\r\n                                    count={this.props.data.submit}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"data-foot\">\r\n                            <input type=\"button\" value=\"返回\" onClick={() => this.props.back()} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: state) => {\r\n    return {\r\n        data: Data.prototype.selectData(state.data as dataState, state.nowQueId as number) as data1,\r\n        que: state.que as dataState,\r\n        nowQueId: state.nowQueId as number\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        back: () => {\r\n            window.location.hash = '/list';\r\n            dispatch(clearQue());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Data)","import * as actionTypes from './actionTypes';\r\n\r\nexport const clearQue = () => ({\r\n    type: actionTypes.ChangeQue,\r\n    id: null\r\n});\r\n","export const ChangeQue = 'Que/Change';\r\n","import React, { Component } from 'react';\r\nimport Header from './header/Header';\r\nimport Home from './home/home';\r\nimport { view as List } from './list'\r\nimport { view as Create } from './create'\r\nimport { view as Fill } from './fill';\r\nimport { view as Data } from './data';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { state } from './interface';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n//下方route路径为'/'的组件 后面添加的 exact （exact=true）属性为只匹配当前路径\r\n//即只有在path为'/'时匹配 '/xxxxx'等不匹配\r\n//不加的话所有斜杠'/'后面跟的路径都会匹配 导致组件渲染重叠\r\nclass Questionnaire extends Component<state> {\r\n    constructor(props: state) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter>\r\n                    <Route path='/' component={Home} exact />\r\n                    <Route path='/home' component={Home} />\r\n                    <Route path='/create' component={Create} />\r\n                    <Route path='/list' component={List} />\r\n                    <Route path='/fill' component={Fill} />\r\n                    <Route path='/data' component={Data} />\r\n                </HashRouter>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        localStorage.setItem('state', JSON.stringify(this.props.prop))\r\n    }\r\n    componentDidUpdate() {\r\n        localStorage.setItem('state', JSON.stringify(this.props.prop))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: state) => {\r\n    return {\r\n        prop: state as state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Questionnaire)","import { createStore, combineReducers } from 'redux';\r\nimport { createReducer, createReducer2, createReducer3, createReducer4 } from './create/reducer';\r\nimport { state } from './interface';\r\n\r\nconst reducers = combineReducers({\r\n    que: createReducer,\r\n    opt: createReducer2,\r\n    nowQueId: createReducer4,\r\n    data: createReducer3\r\n});\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('state')!) as state || {\r\n    data: [\r\n        {\r\n            id: 1,\r\n            state: 'publish',\r\n            name: 'example',\r\n            //select: false,\r\n            deadline: '2019-12-31',\r\n            submit: 4,\r\n        }\r\n    ],\r\n    que: [\r\n        {\r\n            parId: 1,\r\n            order: 0,\r\n            type: 'single',\r\n            question: '',\r\n            must: true,\r\n            submitCount: 0,\r\n            answer: []\r\n        },\r\n        {\r\n            parId: 1,\r\n            order: 1,\r\n            type: 'word',\r\n            question: '',\r\n            must: true,\r\n            submitCount: 0,\r\n            answer: ['123', '222', '1', '']\r\n        }\r\n\r\n    ],\r\n    opt: [\r\n        {\r\n            parId: 1,\r\n            order: 0,\r\n            index: 0,\r\n            content: '',\r\n            count: 2\r\n        }, {\r\n            parId: 1,\r\n            order: 0,\r\n            index: 1,\r\n            content: '',\r\n            count: 2\r\n        }\r\n\r\n    ],\r\n    nowQueId: 0\r\n};\r\n\r\nexport default createStore(reducers, initialState);","import * as actionTypes from './actionTypes';\r\nimport * as actionTypesInList from '../list/actionTypes';\r\nimport { action1, que1, emptyObj, opt1, emptyArr, data1 } from '../interface';\r\n\r\nconst createReducer = (state = [], action: action1) => {\r\n    switch (action.type) {\r\n        case actionTypes.AddQue: {\r\n            let count = 0;\r\n            state.map((item: que1) => {\r\n                if (item.parId === action.parentId) {\r\n                    count++;\r\n                };\r\n            });\r\n            if (count >= 10) {\r\n                console.log('问题最多十个');\r\n                return false;\r\n            }\r\n            return [\r\n                ...state,\r\n                {\r\n                    parId: action.parentId,\r\n                    order: count,\r\n                    type: action.queType,\r\n                    question: '',\r\n                    must: true,\r\n                    submitCount: 0,\r\n                    answer: ''\r\n                }\r\n            ];\r\n        }\r\n        case actionTypes.RemoveQue: {\r\n            return state.filter((item: que1) => {\r\n                if (item.parId === action.parentId && item.order === action.index) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n        case actionTypes.UpQue: {\r\n            //先把目标问题取出 然后插入过滤掉该问题的新数组\r\n            let arr = JSON.parse(JSON.stringify(state));\r\n            let obj: emptyObj = {}, obj2: emptyObj = {};\r\n            if (action.index === 0) {\r\n                console.log('上面没了');\r\n                return arr;\r\n            }\r\n            arr.forEach((item: que1, index: number) => {\r\n                if (item.parId === action.parentId && item.order === action.index) {\r\n                    obj = arr[index];\r\n                }\r\n                if (item.parId === action.parentId && item.order === action.index! - 1) {\r\n                    obj2 = arr[index];\r\n                }\r\n            });\r\n            obj.order--;\r\n            obj2.order++;\r\n            arr.forEach((item: que1) => {\r\n                if (item.parId === action.parentId && item.order === action.index) {\r\n                    item = obj;\r\n                }\r\n            });\r\n            arr.forEach((item: any) => {\r\n                if (item.parId === action.parentId && item.order === action.index! - 1) {\r\n                    item = obj2;\r\n                }\r\n            });\r\n            return arr;\r\n        }\r\n        case actionTypes.DownQue: {\r\n            let arr = JSON.parse(JSON.stringify(state));\r\n            let obj: emptyObj = {}, obj2: emptyObj = {};\r\n            if (action.index === arr.length - 1) {\r\n                console.log('下面没了');\r\n                return arr;\r\n            }\r\n            arr.forEach((item: que1, index: number) => {\r\n                if (item.parId === action.parentId && item.order === action.index) {\r\n                    obj = arr[index];\r\n                }\r\n                if (item.parId === action.parentId && item.order === action.index! + 1) {\r\n                    obj2 = arr[index];\r\n                }\r\n            });\r\n            obj.order++;\r\n            obj2.order--;\r\n            arr.forEach((item: que1) => {\r\n                if (item.parId === action.parentId && item.order === action.index) {\r\n                    item = obj;\r\n                }\r\n            });\r\n            arr.forEach((item: que1) => {\r\n                if (item.parId === action.parentId && item.order === action.index! + 1) {\r\n                    item = obj2;\r\n                }\r\n            });\r\n            return arr;\r\n        }\r\n        case actionTypes.CopyQue: {\r\n            let arr = JSON.parse(JSON.stringify(state));\r\n            let obj: emptyObj = {};\r\n            if (arr.length === 10) {\r\n                console.log('问题最多十个');\r\n                return arr;\r\n            }\r\n            arr.forEach((item: que1) => {\r\n                if (item.parId === action.parentId && item.order === action.index) {\r\n                    obj = item;\r\n                }\r\n            });\r\n            obj.order = arr.length;\r\n            arr.push(obj);\r\n            return arr;\r\n        }\r\n        case actionTypes.UpdateQue: {\r\n            return state.map((item: que1) => {\r\n                if (item.parId === action.id && item.order === action.index) {\r\n                    return { ...item, question: action.content };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n        }\r\n        case actionTypes.UpdateWord: {\r\n            return state.map((item: que1) => {\r\n                if (item.parId === action.id && item.order === action.index) {\r\n                    return { ...item, answer: action.answer };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n        }\r\n        case actionTypes.FillQue: {\r\n            return state.map((item: que1) => {\r\n                if (item.parId === action.id && item.order === action.index) {\r\n                    return { ...item, answer: [...item.answer!, action.answer] };\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        }\r\n        case actionTypes.JustQueOrder: {\r\n            return state.map((item: que1) => {\r\n                if (item.parId === action.id && item.order! > action.index!) {\r\n                    return { ...item, order: item.order! - 1 };\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst createReducer2 = (state = [], action: action1) => {\r\n    switch (action.type) {\r\n        case actionTypes.AddOpt: {\r\n            let index: number = 0;\r\n            state.forEach((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex) {\r\n                    index++;\r\n                }\r\n            })\r\n            if (index === 4) return state;\r\n            return [\r\n                ...state,\r\n                {\r\n                    parId: action.parentId,\r\n                    order: action.parIndex,\r\n                    index: index,\r\n                    content: '',\r\n                    answer: ''\r\n                }\r\n            ]\r\n        }\r\n        case actionTypes.RemoveOpt: {\r\n            let arr = state.filter((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex) {\r\n                    return item.index !== action.index;\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n            arr.forEach((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex) {\r\n                    if (item.index >= action.index!) item.index--;\r\n                }\r\n            })\r\n            return arr;\r\n        }\r\n        case actionTypes.UpOpt: {\r\n            let obj: emptyArr = [], obj2: emptyArr = [];\r\n            let arr: Array<any> = state.filter((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex) {\r\n                    obj.push(item);\r\n                    return false;\r\n                } else if (item.parId === action.parentId && item.order === action.parIndex! - 1) {\r\n                    obj2.push(item)\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            obj.forEach((item: opt1) => {\r\n                item.order--;\r\n            });\r\n            obj2.forEach((item: opt1) => {\r\n                item.order++;\r\n            })\r\n            arr.push(...obj, ...obj2);\r\n            return arr;\r\n        }\r\n        case actionTypes.DownOpt: {\r\n            let obj: emptyArr = [], obj2: emptyArr = [];\r\n            let arr: Array<any> = state.filter((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex) {\r\n                    obj.push(item);\r\n                    return false;\r\n                } else if (item.parId === action.parentId && item.order === action.parIndex! + 1) {\r\n                    obj2.push(item)\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            obj.forEach((item: opt1) => {\r\n                item.order++;\r\n            });\r\n            obj2.forEach((item: opt1) => {\r\n                item.order--;\r\n            })\r\n            arr.push(...obj, ...obj2);\r\n            return arr;\r\n        }\r\n        case actionTypes.UpdateOpt: {\r\n            return state.map((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex && item.index === action.index) {\r\n                    return { ...item, content: action.content };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n        }\r\n        case actionTypes.SubmitOpt: {\r\n            return state.map((item: opt1) => {\r\n                if (item.parId === action.parentId && item.order === action.parIndex && item.index === action.index) {\r\n                    if (item.count + action.number! < 0) {\r\n                        return item;\r\n                    } else {\r\n                        return { ...item, count: item.count + action.number! };\r\n                    }\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n        }\r\n        case actionTypes.FillOpt: {\r\n            return state.map((item: opt1) => {\r\n                if (item.parId === action.id && item.order === action.order && item.index === action.index) {\r\n                    return { ...item, count: item.count + action.count! };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst createReducer3 = (state = [], action: action1) => {\r\n    switch (action.type) {\r\n        case actionTypes.SaveQue:\r\n            return state.map((item: data1) => {\r\n                return item.id === action.id ? { ...item, state: 'ready' } : item;\r\n            });\r\n        case actionTypes.SubmitQue:\r\n            return state.map((item: data1) => {\r\n                return item.id === action.id ? { ...item, state: 'publish' } : item;\r\n            });\r\n        case actionTypes.RemoveItem:\r\n            return state.filter((item: data1) => {\r\n                return item.id !== action.id;\r\n            });\r\n        case actionTypes.NewItem:\r\n            if (state.find((item: data1) => item.id === action.id)) {\r\n                return state;\r\n            }\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    state: 'done',\r\n                    name: action.title,\r\n                    deadline: action.deadline,\r\n                    submit: 0\r\n                }\r\n            ];\r\n        case actionTypes.AddCount:\r\n            return state.map((item: data1) => {\r\n                return item.id === action.id ? { ...item, submit: item.submit! + 1 } : item;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst createReducer4 = (state = [], action: action1) => {\r\n    switch (action.type) {\r\n        case actionTypes.ChangeQue:\r\n            return action.id;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport { createReducer, createReducer2, createReducer3, createReducer4 };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Questionnaire from './Questionnaire';\nimport { Provider } from 'react-redux';\nimport Store from './store';\n\nReactDOM.render(\n    <Provider store={Store}>\n        <Questionnaire />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}